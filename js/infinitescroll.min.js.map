{"version":3,"names":["$","ew","_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","InfiniteScroll","id","options","_this$options","_this$options2","this","container","document","getElementById","table","getTable","rows","classList","contains","pageCount","rootMargin","threshold","$document","$container","addClass","$grid","closest","$panels","find","innerWidth","$form","$detailPages","$tabPane","$tab","attr","$collapse","isActive","hasClass","isDetail","on","init","bind","_proto","_this$container","querySelector","getWidth","isMobile","getUrl","page","currentPage","TABLE_PAGE_NUMBER","getParams","URLSearchParams","TOKEN_NAME_KEY","TOKEN_NAME","ANTIFORGERY_TOKEN_KEY","ANTIFORGERY_TOKEN","PAGE_LAYOUT","setCurrentPage","history","replaceState","observe","el","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","matches","tbody","nextElementSibling","load","parseInt","dataset","intersectionRatio","root","observeTableBody","count","Math","max","countToLast","ROWTYPE_ADD","ROWTYPE_EDIT","$overlay","overlayTemplate","append","fetch","method","body","then","async","$html","response","text","main","replaceSelectors","selector","html","appendSelectors","Event","type","appendChild","initPage","trigger","Array","from","row","rowindex","finally","removeClass","remove","setupTable","clientHeight","offsetHeight","$rows","filter","n","length","slice","data","event","jqxhr","settings","isString","startsWith","endsWith","ar","parseJson","isArray","JSON","stringify","map","req","infinitescroll","multipart","contentType","FormData","set","mergeSearchParams","args","sameText","url","setSearchParams","width","grid","scrollTop","assign","jQuery"],"sources":["js\\infinitescroll.js"],"sourcesContent":["/*!\n * Infinite Scroll for PHPMaker v24.14.0\n * Copyright (c) e.World Technology Limited. All rights reserved.\n */\n(function ($, ew) {\n  'use strict';\n\n  function _typeof(o) {\r\n    \"@babel/helpers - typeof\";\r\n\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\r\n      return typeof o;\r\n    } : function (o) {\r\n      return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\r\n    }, _typeof(o);\r\n  }\n\n  function toPrimitive(t, r) {\r\n    if (\"object\" != _typeof(t) || !t) return t;\r\n    var e = t[Symbol.toPrimitive];\r\n    if (void 0 !== e) {\r\n      var i = e.call(t, r || \"default\");\r\n      if (\"object\" != _typeof(i)) return i;\r\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\r\n    }\r\n    return (\"string\" === r ? String : Number)(t);\r\n  }\n\n  function toPropertyKey(t) {\r\n    var i = toPrimitive(t, \"string\");\r\n    return \"symbol\" == _typeof(i) ? i : String(i);\r\n  }\n\n  function _defineProperty(obj, key, value) {\r\n    key = toPropertyKey(key);\r\n    if (key in obj) {\r\n      Object.defineProperty(obj, key, {\r\n        value: value,\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true\r\n      });\r\n    } else {\r\n      obj[key] = value;\r\n    }\r\n    return obj;\r\n  }\n\n  /**\r\n   * InfiniteScroll\r\n   */\r\n  let InfiniteScroll = /*#__PURE__*/function () {\r\n    /**\r\n     * Constructor\r\n     * @param {string} id Container ID\r\n     * @param {Object} options Options\r\n     * @param {string} options.threshold Specifies a set of offsets to add to the root's bounding box when calculating intersections. Default is \"0px 0px 0px 0px\".\r\n     * @param {number[]} options.rootMargin An array of numbers between 0.0 and 1.0, specifying a ratio of intersection area to total bounding box area for the observed target. Default is [0, 0.25].\r\n     * @param {number} options.pageCount Page count\r\n     */\r\n    function InfiniteScroll(id, options) {\r\n      var _this$options, _this$options$rootMar, _this$options2, _this$options2$thresh;\r\n      this.container = document.getElementById(id), this.table = this.getTable();\r\n      if (!this.table || !this.table.rows || !this.container || !this.container.classList.contains(\"ew-grid-middle-panel\")) return;\r\n      this.options = options || {}, this.pageCount = options.pageCount;\r\n      (_this$options$rootMar = (_this$options = this.options).rootMargin) != null ? _this$options$rootMar : _this$options.rootMargin = InfiniteScroll.rootMargin, (_this$options2$thresh = (_this$options2 = this.options).threshold) != null ? _this$options2$thresh : _this$options2.threshold = InfiniteScroll.threshold, this.$document = $(document), this.$container = $(this.container).addClass(\"table-responsive\"), this.$grid = this.$container.closest(\".ew-grid\"), this.$panels = this.$grid.find(\".ew-grid-lower-panel, .ew-grid-upper-panel\").innerWidth(\"100%\"), this.$form = this.$grid.closest(\".ew-form:not(.ew-list-form)\"), this.$detailPages = this.$grid.closest(\".ew-detail-pages\").addClass(\"d-block\"),\r\n      // Reset from \"table\" to \"block\"\r\n      this.$tabPane = this.$grid.closest(\".tab-pane\"), this.$tab = this.$detailPages.find(\"a[data-bs-toggle=tab][href='#\" + this.$tabPane.attr(\"id\") + \"']\"), this.$collapse = this.$grid.closest(\".collapse\"), this.isActive = this.$tab.hasClass(\"show\") || this.$collapse.hasClass(\"show\") || !this.$detailPages[0], this.isDetail = !!this.$form[0];\r\n      if (this.isDetail && !this.isActive) {\r\n        // Is detail grid but not active\r\n        this.$tab.on(\"shown.bs.tab\", this.init.bind(this));\r\n        this.$collapse.on(\"shown.bs.collapse\", this.init.bind(this));\r\n      } else {\r\n        this.init();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get table\r\n     * @returns {HTMLTableElement} Table\r\n     */\r\n    var _proto = InfiniteScroll.prototype;\r\n    _proto.getTable = function getTable() {\r\n      var _this$container;\r\n      return (_this$container = this.container) == null ? void 0 : _this$container.querySelector(\"table.ew-table.ew-infinite-scroll-table\");\r\n    }\r\n\r\n    /**\r\n     * Get width\r\n     * @returns {string} Width\r\n     */;\r\n    _proto.getWidth = function getWidth() {\r\n      return ew.isMobile() ? \"100%\" : \"\"; // Use width = 100% for mobile\r\n    }\r\n\r\n    /**\r\n     * Get URL\r\n     * @param {number} page\r\n     * @returns {string} URL\r\n     */;\r\n    _proto.getUrl = function getUrl(page) {\r\n      return ew.currentPage() + \"?\" + ew.TABLE_PAGE_NUMBER + \"=\" + page;\r\n    }\r\n\r\n    /**\r\n     * Get request parameters\r\n     * @returns {URLSearchParams}\r\n     */;\r\n    _proto.getParams = function getParams() {\r\n      return new URLSearchParams([[ew.TOKEN_NAME_KEY, ew.TOKEN_NAME],\r\n      // Add token name // PHP\r\n      [ew.ANTIFORGERY_TOKEN_KEY, ew.ANTIFORGERY_TOKEN],\r\n      // Add antiforgery token // PHP\r\n      [ew.PAGE_LAYOUT, \"false\"], [\"infinitescroll\", \"1\"]]);\r\n    }\r\n\r\n    /**\r\n     * Set current page\r\n     * @param {number} page Current page number\r\n     */;\r\n    _proto.setCurrentPage = function setCurrentPage(page) {\r\n      this.currentPage = page;\r\n      history.replaceState(null, \"\", this.getUrl(page));\r\n    }\r\n\r\n    /**\r\n     * Observe element\r\n     * @param {HTMLElement} el Element to observe\r\n     */;\r\n    _proto.observe = function observe(el) {\r\n      if (!this.observer) {\r\n        this.observer = new IntersectionObserver(entries => {\r\n          entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n              let el = entry.target;\r\n              if (el.matches(\"tr\")) {\r\n                // Table row\r\n                let tbody = el.closest(\"tbody[data-page]\");\r\n                if (!tbody.nextElementSibling && !tbody.closest(\".ew-grid.ew-loading\"))\r\n                  // No next page and not loading\r\n                  this.load(parseInt(tbody.dataset.page, 10));\r\n              } else if (el.matches(\"tbody[data-page]\") && entry.intersectionRatio > (this.options.threshold[1] || InfiniteScroll.threshold[1])) {\r\n                // Table body\r\n                this.setCurrentPage(parseInt(el.dataset.page, 10));\r\n              }\r\n            }\r\n          });\r\n        }, {\r\n          root: this.container,\r\n          rootMargin: this.options.rootMargin,\r\n          threshold: this.options.threshold\r\n        });\r\n      }\r\n      if (!el) return;\r\n      this.observer.observe(el);\r\n    }\r\n\r\n    /**\r\n     * Observe table body element and the nth-to-last row element\r\n     * @param {HTMLElement} tbody\r\n     */;\r\n    _proto.observeTableBody = function observeTableBody(tbody) {\r\n      this.observe(tbody); // Observe the tbody\r\n      let count = Math.max(InfiniteScroll.countToLast, 1) || 1;\r\n      for (let i = 1; i <= count; i++) this.observe(tbody.querySelector(\":scope > tr:nth-last-child(\" + i + \")\")); // Observe the nth-to-last row\r\n    }\r\n\r\n    /**\r\n     * Load next page\r\n     * @param {number} page Current page index\r\n     */;\r\n    _proto.load = function load(page) {\r\n      if (page >= this.pageCount) return;\r\n      if (this.$grid.find(\"[data-rowtype=\" + ew.ROWTYPE_ADD + \"], [data-rowtype=\" + ew.ROWTYPE_EDIT + \"]\")[0])\r\n        // Inline/Grid-Add/Edit\r\n        return;\r\n      let $overlay = $(ew.overlayTemplate());\r\n      this.$grid.addClass(\"ew-loading\").append($overlay);\r\n      fetch(this.getUrl(++page), {\r\n        method: \"POST\",\r\n        body: this.getParams()\r\n      }).then(async response => {\r\n        let $html = $(\"<div>\" + (await response.text()) + \"</div>\"),\r\n          $main = $html.find(\".list\"),\r\n          main = $main[0],\r\n          $tbody = $html.find(\".ew-infinite-scroll-table > tbody[data-page]\"),\r\n          tbody = $tbody[0];\r\n        if (tbody) {\r\n          InfiniteScroll.replaceSelectors.forEach(selector => $(selector).html($html.find(selector).html())); // Replace contents\r\n          InfiniteScroll.appendSelectors.forEach(selector => $(selector).append($html.find(selector).html())); // Append contents\r\n          let e = $.Event({\r\n            type: \"load.ew\",\r\n            target: main\r\n          });\r\n          this.table.appendChild(tbody); // Append tbody\r\n          ew.initPage(e);\r\n          this.$document.trigger(e);\r\n          Array.from(this.table.rows).forEach((row, i) => row.dataset.rowindex = i); // Update row index\r\n          this.observeTableBody(tbody);\r\n        }\r\n      }).finally(() => this.$grid.removeClass(\"ew-loading\").find($overlay).remove());\r\n    }\r\n\r\n    /**\r\n     * Set up table\r\n     */;\r\n    _proto.setupTable = function setupTable() {\r\n      // Setup the table\r\n      this.table = this.getTable();\r\n      ew.setupTable(this.table);\r\n\r\n      // Check last row\r\n      if (this.table.rows && this.container.clientHeight > this.table.offsetHeight) {\r\n        let $rows = $(this.table.rows).filter(\":not(.ew-template)\"),\r\n          n = $rows.filter(\"[data-rowindex=1]\").length || $rows.filter(\"[data-rowindex=0]\").length || 1;\r\n        $rows.slice(-1 * n).find(\"td.ew-table-last-row\").removeClass(\"ew-table-last-row\").addClass(\"ew-table-border-bottom\");\r\n      }\r\n\r\n      // Observe the tbody and the nth-to-last row\r\n      let tbody = this.table.querySelector(\"tbody[data-page]\");\r\n      !tbody || this.observeTableBody(tbody);\r\n    }\r\n\r\n    /**\r\n     * Init\r\n     */;\r\n    _proto.init = function init() {\r\n      if (this.$container.data(\"InfiniteScroll\")) return;\r\n\r\n      // Add handlers to send infinitescroll=1 (jQuery)\r\n      $(document).on(\"ajaxSend\", function (event, jqxhr, settings) {\r\n        let data = settings.data;\r\n        if ($.isString(data) && data.startsWith(\"[{\") && data.endsWith(\"}]\")) {\r\n          // Check if jQuery batch request\r\n          let ar = ew.parseJson(data);\r\n          if (Array.isArray(ar)) settings.data = JSON.stringify(ar.map(req => ({\r\n            ...req,\r\n            infinitescroll: 1\r\n          })));\r\n        } else {\r\n          if (settings.multipart)\r\n            // jQuery file upload\r\n            settings.contentType = \"multipart/form-data\";\r\n          if (settings.data instanceof FormData) settings.data.set(\"infinitescroll\", \"1\");else settings.data = ew.mergeSearchParams(data, {\r\n            infinitescroll: 1\r\n          });\r\n        }\r\n      });\r\n\r\n      // Add handlers to send infinitescroll=1 (ew.fetch)\r\n      $(document).on(\"fetch\", function (e, args) {\r\n        var _args$init;\r\n        (_args$init = args.init) != null ? _args$init : args.init = {};\r\n        if (!args.init.method || ew.sameText(args.init.method, \"GET\")) {\r\n          // GET\r\n          args.url = ew.setSearchParams(args.url, {\r\n            infinitescroll: 1\r\n          });\r\n        } else {\r\n          // POST\r\n          if (args.init.body instanceof FormData) args.init.body.set(\"infinitescroll\", \"1\");else args.init.body = ew.mergeSearchParams(args.init.body, {\r\n            infinitescroll: 1\r\n          });\r\n        }\r\n      });\r\n\r\n      // Width\r\n      let width = this.getWidth();\r\n\r\n      // Set form width same as grid\r\n      if (this.isDetail && width) this.$form.addClass(\"w-100\");\r\n\r\n      // Adjust the width of the container\r\n      if (this.isDetail || ew.isMobile()) this.$grid.addClass(\"d-block\");\r\n\r\n      // Set up table\r\n      this.setupTable();\r\n\r\n      // Listen to refresh event (e.g. after sorting)\r\n      this.$document.on(\"refresh.ew\", e => {\r\n        let grid = e.target;\r\n        if (this.$grid[0] == grid) {\r\n          let content = grid.querySelector(\".ew-grid-middle-panel\");\r\n          content.scrollTop = 0;\r\n          this.setupTable();\r\n        }\r\n      });\r\n\r\n      // Save the instance\r\n      this.$container.data(\"InfiniteScroll\", this);\r\n    };\r\n    return InfiniteScroll;\r\n  }(); // Extend\r\n  // IntersectionObserver\r\n  // Integer\r\n  // Integer\r\n  _defineProperty(InfiniteScroll, \"countToLast\", 1);\r\n  // Load next page when the nth-to-last row of current page is visible. Default is 1 (the last row).\r\n  _defineProperty(InfiniteScroll, \"rootMargin\", \"0px\");\r\n  _defineProperty(InfiniteScroll, \"threshold\", [0, 0.25]);\r\n  _defineProperty(InfiniteScroll, \"replaceSelectors\", [\".ew-infinite-scroll-grid .ew-grid-upper-panel .ew-pager-end\", \".ew-infinite-scroll-table thead\", \".ew-infinite-scroll-grid .ew-grid-lower-panel .ew-pager-end\"]);\r\n  _defineProperty(InfiniteScroll, \"appendSelectors\", [\".ew-debug .card-body\"]);\r\n  Object.assign(ew, {\r\n    InfiniteScroll\r\n  });\n\n})(jQuery, ew);\n"],"mappings":"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"}